
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import java.util.Timer;
import java.util.TimerTask;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


/**
 *
 * @author Sudhir Kushwaha
 */
public class IssueBook extends javax.swing.JFrame {
        PreparedStatement pst;
        ResultSet rs;
        Connection c=Connect.getConnection();
        private Timer timer;
        private static final Logger logger = Logger.getLogger(IssueBook.class.getName());

    /**
     * Creates new form IssueBook
     */
    public IssueBook() {
        initComponents();
        SimpleDateFormat  dat=new SimpleDateFormat("dd/MM/yyyy ");
         Date d=new Date();
         txtissuedate.setText(dat.format(d));
         
         checkOverdueBooks();
         
    }
public void clear(){
        txtbookname.setText("");
        txtduedate.setText("");
        SimpleDateFormat  dat=new SimpleDateFormat("dd/MM/yyyy ");
         Date d=new Date();
         txtissuedate.setText(dat.format(d));        
         txtstudentid.setText("");
       // txtid.setText("");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnissue = new javax.swing.JButton();
        txtstudentid = new javax.swing.JTextField();
        txtissuedate = new javax.swing.JTextField();
        txtduedate = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        txtbookname = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(242, 242, 242));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/apimg smller.jpg"))); // NOI18N
        jLabel1.setText("Issue Book");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 260, 90));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Student name");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 280, 240, 40));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Book Code");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 360, 250, 40));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Issue Date");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 440, 240, 40));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Due Date");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 530, 240, 40));

        btnissue.setBackground(new java.awt.Color(204, 0, 0));
        btnissue.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnissue.setForeground(new java.awt.Color(242, 242, 242));
        btnissue.setText("Issue Book");
        btnissue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnissueActionPerformed(evt);
            }
        });
        getContentPane().add(btnissue, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 630, 130, 40));

        txtstudentid.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtstudentid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtstudentidActionPerformed(evt);
            }
        });
        getContentPane().add(txtstudentid, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 280, 350, 40));

        txtissuedate.setEditable(false);
        txtissuedate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtissuedate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtissuedateActionPerformed(evt);
            }
        });
        getContentPane().add(txtissuedate, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 440, 350, 40));

        txtduedate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        getContentPane().add(txtduedate, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 530, 350, 40));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/close icon.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 0, 51, 40));

        jButton1.setBackground(new java.awt.Color(204, 0, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(242, 242, 242));
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 200, -1, 30));

        txtbookname.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        getContentPane().add(txtbookname, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 360, 350, 40));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/log in new.jpg"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1140, 770));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(242, 242, 242));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/apimg smller.jpg"))); // NOI18N
        jLabel8.setText("Add Book ");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 270, 80));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
     dispose();   // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnissueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnissueActionPerformed
         if (txtstudentid.getText().isEmpty() /* || txtbookname.getText().isEmpty() ||  txtduedate.getText().isEmpty()*/) {
        JOptionPane.showMessageDialog(this, "Please fill in all fields before issuing a book.");
        return;
    }

    try {
        // Prepare the SQL INSERT statement
        
        // Check if the book is available
        String checkBookQuery = "SELECT coding, title, qty_for_issue FROM new_bitwise WHERE coding = ?";
        PreparedStatement pstCheck = c.prepareStatement(checkBookQuery);
        pstCheck.setString(1, txtbookname.getText());
        ResultSet rs = pstCheck.executeQuery();

        if (rs.next()) {
            int issuedQuantity = rs.getInt("qty_for_issue");

            // Check if copies are available for issue
            if (issuedQuantity <= 0) {
                JOptionPane.showMessageDialog(this, "No copies available for this book.");
                return;
            }
  
        // Modify the INSERT query to exclude 'due_date'
String insertQuery = "INSERT INTO books_issues (book_code, studentname, issue_date) VALUES (?, ?, STR_TO_DATE(?, '%d/%m/%Y'));";
pst = c.prepareStatement(insertQuery);

// Set the parameters for the query
pst.setString(1, txtbookname.getText()); // Assuming txtbookname contains the book_code
pst.setString(2, txtstudentid.getText()); // Set student name
pst.setString(3, txtissuedate.getText()); // Issue date

// Execute the update
int rowsAffected = pst.executeUpdate();
        if (rowsAffected > 0) {
            String updateBookQuery = "UPDATE new_bitwise SET qty_for_issue = qty_for_issue - 1 WHERE coding = ?";
            PreparedStatement pstUpdate = c.prepareStatement(updateBookQuery);
            pstUpdate.setString(1, txtbookname.getText());
            pstUpdate.executeUpdate();
            JOptionPane.showMessageDialog(this, "Book issued successfully.");
            clear(); // Clear the input fields after successful issue
        } else {
            JOptionPane.showMessageDialog(this, "Failed to issue the book. Please try again.");
        }
        } else {
            JOptionPane.showMessageDialog(this, "Book not found.");
        }
    } catch (SQLException ex) {
        Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "An error occurred while issuing the book: " + ex.getMessage());
    }
        /*  if(txtid.getText().equals("")){
                JOptionPane.showMessageDialog(rootPane, "Please enter Book ID and Search it again");
                //txtid.requestFocus();
        }
        else{
            try{
            pst=c.prepareStatement("UPDATE `library`.`book` SET `status` = 'Issued', issue = ?, due = ?,studentid =? WHERE (`id` = ?)");
            pst.setString(1, txtissuedate.getText());
            pst.setString(2, txtduedate.getText());
            pst.setString(3, txtstudentid.getText());
            //pst.setString(4, txtid.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Book Issued");
            clear();
            } catch (SQLException ex) {
                Logger.getLogger(SignIn.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
*/

        
        // TODO add your handling code here:
    }//GEN-LAST:event_btnissueActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            pst=c.prepareStatement("SELECT * FROM library.book where id=?");
            //pst.setString(1, txtid.getText());
            rs=pst.executeQuery();
            if(rs.next())
                    txtbookname.setText(rs.getString("name"));
            else
                JOptionPane.showMessageDialog(this, "Please Enter Valied Book ID");
        } catch (SQLException ex) {
            Logger.getLogger(SignIn.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtissuedateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtissuedateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtissuedateActionPerformed

    private void txtstudentidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtstudentidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtstudentidActionPerformed

    /**
     * @param args the command line arguments
     */
      public void checkOverdueBooks() {
        timer = new Timer();
        TimerTask task = new TimerTask() {
            @Override
            public void run() {
                logger.info("Running overdue book check...");
                String query = "SELECT book_code, studentname, due_date FROM books_issues WHERE due_date < CURDATE() AND (notified = FALSE OR notified IS NULL);";
                try (PreparedStatement pst = c.prepareStatement(query);
                     ResultSet rs = pst.executeQuery()) {

                    while (rs.next()) {
                        String bookCode = rs.getString("book_code");
                        String studentName = rs.getString("studentname");
                        Date dueDate = rs.getDate("due_date");

                        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                        String dueDateStr = sdf.format(dueDate);

                        String message = "Book with code " + bookCode + " issued to " + studentName + " was due on " + dueDateStr + ".";

                        // Display the alert on the Event Dispatch Thread
                        SwingUtilities.invokeLater(() -> {
                            JOptionPane.showMessageDialog(null, message, "Overdue Book Alert", JOptionPane.WARNING_MESSAGE);
                        });

                        // Mark as notified to prevent multiple alerts
                        String updateQuery = "UPDATE books_issues SET notified = TRUE WHERE book_code = ? AND studentname = ? AND due_date = ?";
                        try (PreparedStatement pstUpdate = c.prepareStatement(updateQuery)) {
                            pstUpdate.setString(1, bookCode);
                            pstUpdate.setString(2, studentName);
                            pstUpdate.setDate(3, new java.sql.Date(dueDate.getTime()));
                            pstUpdate.executeUpdate();
                        } catch (SQLException ex) {
                            logger.log(Level.SEVERE, null, ex);
                        }
                    }

                } catch (SQLException ex) {
                    logger.log(Level.SEVERE, null, ex);
                    SwingUtilities.invokeLater(() -> {
                        JOptionPane.showMessageDialog(null, "Error checking overdue books: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    });
                }
            }
        };

        // *** Modification for Testing: Schedule to run every 10 seconds ***
       /* long delay = 0; // Start immediately
        long period = 10 * 1000; // 10 seconds
        timer.scheduleAtFixedRate(task, delay, period);  */
        
        // *** After testing, replace the above scheduling with the original one ***
        
        // Schedule the task to run once a day at a specific time (e.g., 9 AM)
        Date now = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date firstRun = null;
        try {
            firstRun = sdf.parse(new SimpleDateFormat("dd/MM/yyyy").format(now) + " 09:00:00");
        } catch (ParseException e) {
            e.printStackTrace();
            firstRun = new Date(now.getTime() + 1000); // Next second if parsing fails
        }

        if (now.after(firstRun)) {
            // If current time is past 9 AM today, schedule for next day
            firstRun = new Date(firstRun.getTime() + 24 * 60 * 60 * 1000);
        }

        long period = 24 * 60 * 60 * 1000; // 24 hours in milliseconds
        timer.scheduleAtFixedRate(task, firstRun, period);
        
    }

    // Override the dispose method to cancel the timer when the window is closed
    @Override
    public void dispose() {
        super.dispose();
        if (timer != null) {
            timer.cancel();
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IssueBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnissue;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txtbookname;
    private javax.swing.JTextField txtduedate;
    private javax.swing.JTextField txtissuedate;
    private javax.swing.JTextField txtstudentid;
    // End of variables declaration//GEN-END:variables
}
